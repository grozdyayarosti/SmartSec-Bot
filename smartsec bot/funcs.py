import requests
import telebot
from telebot import types

from constants import MISTRAL_API_KEY, TELEGRAM_BOT_TOKEN


class TGHelpBot(telebot.TeleBot):
    def __init__(self):
        super().__init__(TELEGRAM_BOT_TOKEN)

    def start_message(self, message: types.Message):
        self.send_message(
            message.chat.id,
            f"–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, {message.from_user.first_name}!\n"
            f"–Ø - <b>{self.get_me().first_name}</b>.\n–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            parse_mode='html',
            # –í—ã–≤–æ–¥ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
            # (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –±—É–¥—É—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω—ã —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ)
            reply_markup=self.markUpSave('start')
        )

    def send_start_menu(self, message: types.Message):
        if message.chat.type == 'private':
            match message.text:
                case '–í–æ–ø—Ä–æ—Å –ø–æ –ò–ë':
                    reply_message = self.send_message(
                        message.chat.id,
                        "–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø–æ –ò–ë",
                        reply_markup=self.markUpSave('empty')
                    )
                    self.register_next_step_handler(reply_message, self.send_infosec_answer)

                case _:
                    self.send_message(
                        message.chat.id,
                        "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –º–æ–≥—É –≤–∞–º –æ—Ç–≤–µ—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ãü•∫"
                    )

    def send_infosec_answer(self, message: types.Message):
        delete_keyboard_msg = self.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ . . . ',
                                               reply_markup=types.ReplyKeyboardRemove())
        response = self.ask_mistral(message.text)
        # response = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (–ò–ë) ‚Äî —ç—Ç–æ —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç—å –º–µ—Ä –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞ –∑–∞—â–∏—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ç –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, —Ä–∞—Å–∫—Ä—ã—Ç–∏—è, –∏–∑–º–µ–Ω–µ–Ω–∏—è, —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –≤–∏–¥–æ–≤ —É—â–µ—Ä–±–∞. –û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ ‚Äî –æ–±–µ—Å–ø–µ—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å, —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n\n### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:\n\n1. **–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å**: –ó–∞—â–∏—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ç –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è. –≠—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, –∫–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞ –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n\n2. **–¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å**: –û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –∏–ª–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∞ –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è. –≠—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –∫–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Ä—Å–∏–π, —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫—É —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö.\n\n3. **–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å**: –û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è. –≠—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Å–±–æ–µ–≤ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å—é —Å–∏—Å—Ç–µ–º.\n\n### –ó–∞—á–µ–º –Ω—É–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å?\n\n1. **–ó–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö**: –í —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –º–∏—Ä–µ –¥–∞–Ω–Ω—ã–µ —è–≤–ª—è—é—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ —Å–∞–º—ã—Ö —Ü–µ–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤. –£—Ç–µ—á–∫–∞ –∏–ª–∏ –∫—Ä–∞–∂–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –ø–æ—Ç–µ—Ä—è–º, —É—â–µ—Ä–±—É —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º.\n\n2. **–°–æ–±–ª—é–¥–µ–Ω–∏–µ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π**: –ú–Ω–æ–≥–∏–µ –æ—Ç—Ä–∞—Å–ª–∏ –∏ —Å—Ç—Ä–∞–Ω—ã –∏–º–µ—é—Ç —Å—Ç—Ä–æ–≥–∏–µ –∑–∞–∫–æ–Ω—ã –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã, –∫–∞—Å–∞—é—â–∏–µ—Å—è –∑–∞—â–∏—Ç—ã –¥–∞–Ω–Ω—ã—Ö. –ù–µ—Å–æ–±–ª—é–¥–µ–Ω–∏–µ —ç—Ç–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —à—Ç—Ä–∞—Ñ–∞–º –∏ –¥—Ä—É–≥–∏–º —Å–∞–Ω–∫—Ü–∏—è–º.\n\n3. **–ó–∞—â–∏—Ç–∞ –æ—Ç –∫–∏–±–µ—Ä–∞—Ç–∞–∫**: –ö–∏–±–µ—Ä–∞—Ç–∞–∫–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≤—Å–µ –±–æ–ª–µ–µ –∏–∑–æ—â—Ä–µ–Ω–Ω—ã–º–∏ –∏ —á–∞—Å—Ç—ã–º–∏. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞—â–∏—Ç–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –æ—Ç —Ç–∞–∫–∏—Ö —É–≥—Ä–æ–∑, –∫–∞–∫ –≤–∏—Ä—É—Å—ã, —Ç—Ä–æ—è–Ω—ã, —Ñ–∏—à–∏–Ω–≥ –∏ DDoS-–∞—Ç–∞–∫–∏.\n\n4. **–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –¥–æ–≤–µ—Ä–∏—è**: –ö–ª–∏–µ–Ω—Ç—ã –∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω—ã –≤ —Ç–æ–º, —á—Ç–æ –∏—Ö –¥–∞–Ω–Ω—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –≠—Ç–æ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç —É–∫—Ä–µ–ø–ª–µ–Ω–∏—é –¥–æ–≤–µ—Ä–∏—è –∏ —É–∫—Ä–µ–ø–ª–µ–Ω–∏—é –¥–µ–ª–æ–≤—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.\n\n5. **–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ—Å—Ç–∏ –±–∏–∑–Ω–µ—Å–∞**: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø–æ–º–æ–≥–∞–µ—Ç –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∏—Å–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–µ—Ä–µ—Ä—ã–≤–∞–º–∏ –≤ —Ä–∞–±–æ—Ç–µ, –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±—ã—Å—Ç—Ä–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤.\n\n### –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ä—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:\n\n1. **–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö**: –ó–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å –ø–æ–º–æ—â—å—é –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤.\n\n2. **–ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞**: –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n\n3. **–ê–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω–æ–µ –ü–û –∏ —Å–∏—Å—Ç–µ–º—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –≤—Ç–æ—Ä–∂–µ–Ω–∏–π**: –ó–∞—â–∏—Ç–∞ –æ—Ç –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω–æ–≥–æ –ü–û –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ç–µ–≤–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞ –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.\n\n4. **–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ**: –†–µ–≥—É–ª—è—Ä–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –¥–∞–Ω–Ω—ã—Ö –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞–Ω–æ–≤ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ —Å–±–æ–µ–≤.\n\n5. **–û–±—É—á–µ–Ω–∏–µ –∏ –æ—Å–≤–µ–¥–æ–º–ª–µ–Ω–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤**: –û–±—É—á–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ—Å–Ω–æ–≤–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ –∏—Ö –æ—Å–≤–µ–¥–æ–º–ª–µ–Ω–Ω–æ—Å—Ç–∏ –æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —É–≥—Ä–æ–∑–∞—Ö.\n\n6. **–ü–æ–ª–∏—Ç–∏–∫–∏ –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏**: –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫ –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —è–≤–ª—è–µ—Ç—Å—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ–π –¥–ª—è –ª—é–±–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –µ–µ —Ä–∞–∑–º–µ—Ä–∞ –∏ –æ—Ç—Ä–∞—Å–ª–∏, –∏ —Ç—Ä–µ–±—É–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —É—Å–ª–æ–≤–∏—è—Ö –±—ã—Å—Ç—Ä–æ –º–µ–Ω—è—é—â–µ–π—Å—è —É–≥—Ä–æ–∑–Ω–æ–π —Å—Ä–µ–¥—ã."
        response_text = self.processing_response(response)
        self.delete_message(message.chat.id, delete_keyboard_msg.id)
        self.send_message(
            chat_id=message.chat.id,
            text=response_text,
            reply_markup=self.markUpSave('start'),
            parse_mode='MarkdownV2'
        )

    @staticmethod
    def ask_mistral(prompt: str) -> str:
        url = "https://api.mistral.ai/v1/chat/completions"
        headers = {"Authorization": f"Bearer {MISTRAL_API_KEY}", "Content-Type": "application/json"}
        data = {
            "model": "mistral-large-latest",  # –ò–ª–∏ "mistral-small" –¥–ª—è –±–æ–ª–µ–µ –¥–µ—à—ë–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
            "messages": [{"role": "user", "content": prompt}]
        }
        response = requests.post(url, json=data, headers=headers)
        # return response['choices'][0]['message']['content']
        if response.status_code == 200:
            response_text = eval(response.text.replace('null', "None"))['choices'][0]['message']['content']
        else:
            response_text = "–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞.\n–£–∂–µ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º!"
        return response_text

    @staticmethod
    def processing_response(response: str) -> str:
        # TODO —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–∫–∏
        response = response.replace('.', '\\.')
        response = response.replace("_", "\\_")
        response = response.replace("-", "\\-")
        # response = response.replace("*", "\\*")
        # response = response.replace("#", "\\#")
        response = response.replace("[", "\\[")
        response = response.replace("(", "\\(")
        response = response.replace(")", "\\)")
        response = response.replace("<", "\\<")
        response = response.replace(">", "\\>")
        response = response.replace("`", "\\`")
        response = response.replace("!", "\\!")
        response = response.replace("**", "*")

        lines = response.split('\n')
        # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ
        for i in range(len(lines)):
            # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã # –Ω–∞ *
            if '#' in lines[i]:
                lines[i] = lines[i].replace('###', '*') + '*'
        # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ç–µ–∫—Å—Ç —Å —Å–∏–º–≤–æ–ª–∞–º–∏ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
        response = '\n'.join(lines)

        return response

    # –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —Å–æ–∑–¥–∞—ë—Ç markup - –∞–ª—å–µ—Ç–∞—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–∞
    @staticmethod
    def markUpSave(mode: str) -> types.ReplyKeyboardMarkup:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        if mode == 'start':
            item1 = telebot.types.KeyboardButton("–í–æ–ø—Ä–æ—Å –ø–æ –ò–ë")
            item2 = telebot.types.KeyboardButton("–ó–∞–≥–ª—É—à–∫–∞")
            markup.add(item1, item2)
        elif mode == 'empty':
            markup = telebot.types.ReplyKeyboardRemove()
        return markup
